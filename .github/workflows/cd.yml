name: Spring Boot CD

# Event Trigger
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    # Task의 sequence를 명시한다.
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-production.yml
        env:
          security.jwt.token.secret-key: ${{ secrets.JWT_SECRET_KEY }}
          security.jwt.token.expire-length: ${{ secrets.JWT_EXPIRE_LENGTH }}
          server.port: ${{ vars.APPLICATION_PORT }}

      # Build
      - name: Create Spring Boot jar
        run: ./gradlew bootJar

      - name: Make deploy directory
        run: mkdir deploy

      - name: Copy Jar
        run: cp build/libs/*.jar deploy

      - name: Copy appspec.yml and runner.sh
        run: cp .deploy/* deploy

      - name: Compress deploy directory
        run: zip -r -qq -j snack-game-build.zip deploy

      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private snack-game-build.zip s3://snackgamebucket

      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name spring-deploy \
          --deployment-group-name snackgame-deploy \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=snackgamebucket,bundleType=zip,key=snack-game-build.zip \
          --region ap-northeast-2
